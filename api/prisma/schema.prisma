generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql" 
  url      = env("DATABASE_URL")
}



model User {
  id         String    @id @default(cuid())
  email      String    @unique
  name       String?
  avatar     String?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  googleId   String?   @unique
  facebookId String?   @unique
  chats      Chat[]  
  payments Payment[]         
}




model Payment {
  id          String         @id @default(cuid())  
  userId      String                                
  user        User           @relation(fields: [userId], references: [id]) 
  amount      Float                                   
  paymentDate DateTime        @default(now())     
  status      PaymentStatus   @default(PENDING)      
}



enum PaymentStatus {
  PENDING    
  SUCCESS   
  FAILED    
}



model Chat {
  id         String     @id @default(cuid())
  title      String?   
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  userId     String
  user       User       @relation(fields: [userId], references: [id])
  messages   Message[]  
}


model Message {
  id              String     @id @default(cuid())
  content         String
  role            UserRole   
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
  chatId          String
  chat            Chat       @relation(fields: [chatId], references: [id])
  mediaLinks      MediaLink[] 
  parentMessageId String?    
  parentMessage   Message?   @relation("MessageToParent", fields: [parentMessageId], references: [id])
  childMessages   Message[]  @relation("MessageToParent")
}




model MediaLink {
  id        String   @id @default(cuid())
  url       String
  type      MediaType
  messageId String
  message   Message   @relation(fields: [messageId], references: [id])
  createdAt DateTime  @default(now())
}



enum MediaType {
  IMAGE
  VIDEO
}



enum UserRole {
  USER   
  SYSTEM   
}
